name: TruffleHog Secret Scanning

on:
  # Run on pull requests
  pull_request:
    branches: [ main, master, develop ]
  
  # Run on pushes to main branches
  push:
    branches: [ main, master ]
  
  # Run weekly scheduled full scan
  schedule:
    - cron: '0 2 * * 1'  # Every Monday at 2 AM UTC
  
  # Allow manual triggering
  workflow_dispatch:
    inputs:
      scan_type:
        description: 'Type of scan to perform'
        required: true
        default: 'incremental'
        type: choice
        options:
        - incremental
        - full

permissions:
  contents: read
  security-events: write
  pull-requests: write
  actions: read

jobs:
  secret-scan:
    name: TruffleHog Secret Scan
    runs-on: ubuntu-latest
    timeout-minutes: 30
    
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0  # Fetch full history for comprehensive scanning
        token: ${{ secrets.GITHUB_TOKEN }}

    - name: Determine Scan Parameters
      id: scan-params
      run: |
        echo "Event: ${{ github.event_name }}"
        echo "Ref: ${{ github.ref }}"
        
        if [[ "${{ github.event_name }}" == "schedule" ]] || [[ "${{ github.event.inputs.scan_type }}" == "full" ]]; then
          echo "scan_mode=full" >> $GITHUB_OUTPUT
          echo "extra_args=--json --archive-max-size=100MB --archive-max-depth=10 --archive-timeout=5m --concurrency=4 --config=.trufflehog.yml --exclude-paths=.trufflehog-exclude-paths.txt" >> $GITHUB_OUTPUT
        else
          echo "scan_mode=incremental" >> $GITHUB_OUTPUT
          echo "extra_args=--json --archive-max-size=100MB --archive-max-depth=10 --archive-timeout=5m --concurrency=4 --config=.trufflehog.yml --exclude-paths=.trufflehog-exclude-paths.txt --filter-unverified --filter-entropy=3.0" >> $GITHUB_OUTPUT
        fi

    - name: Run TruffleHog Scan
      id: trufflehog
      uses: trufflesecurity/trufflehog@main
      with:
        path: ./
        base: ${{ github.event.repository.default_branch }}
        head: HEAD
        extra_args: ${{ steps.scan-params.outputs.extra_args }}
      continue-on-error: true

    - name: Process Scan Results
      if: always()
      run: |
        echo "TruffleHog scan completed with exit code: ${{ steps.trufflehog.outcome }}"
        
        # Check if any secrets were found
        if [[ "${{ steps.trufflehog.outcome }}" == "failure" ]]; then
          echo "‚ö†Ô∏è SECRETS DETECTED - Review required!"
          echo "secrets_found=true" >> $GITHUB_ENV
        else
          echo "‚úÖ No secrets detected"
          echo "secrets_found=false" >> $GITHUB_ENV
        fi

    - name: Comment on Pull Request
      if: github.event_name == 'pull_request' && env.secrets_found == 'true'
      uses: actions/github-script@v7
      with:
        script: |
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: `## üîí TruffleHog Secret Scan Results
            
            ‚ö†Ô∏è **Potential secrets detected in this pull request!**
            
            Please review the scan results and ensure no sensitive information is being committed:
            
            ### Next Steps:
            1. Review the detected secrets in the workflow logs
            2. Remove any actual secrets from your code
            3. Use environment variables or secure secret management instead
            4. Add false positives to the exclusion file if needed
            
            ### Resources:
            - [How to handle detected secrets](https://docs.github.com/en/code-security/secret-scanning/managing-alerts-from-secret-scanning)
            - [Best practices for managing secrets](https://docs.github.com/en/actions/security-guides/encrypted-secrets)
            
            *This comment was automatically generated by TruffleHog secret scanning.*`
          })

    - name: Create Security Advisory
      if: github.event_name == 'schedule' && env.secrets_found == 'true'
      uses: actions/github-script@v7
      with:
        script: |
          const advisory = await github.rest.securityAdvisories.createRepositoryAdvisory({
            owner: context.repo.owner,
            repo: context.repo.repo,
            summary: 'Potential secrets detected in repository',
            description: `TruffleHog weekly scan detected potential secrets in the repository. Please review and remediate any confirmed secrets immediately.
            
            Scan Details:
            - Scan Date: ${new Date().toISOString()}
            - Scan Type: Scheduled weekly scan
            - Repository: ${context.repo.owner}/${context.repo.repo}
            
            Next Steps:
            1. Review the workflow logs for specific findings
            2. Rotate any confirmed secrets
            3. Remove secrets from version control history if needed
            4. Update exclusion patterns for false positives`,
            severity: 'moderate',
            cvss_vector_string: 'CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N'
          });
          
          console.log(`Created security advisory: ${advisory.data.html_url}`);

    - name: Upload Scan Results
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: trufflehog-scan-results-${{ github.run_id }}
        path: |
          trufflehog-output.json
          .github/workflows/
        retention-days: 30

    - name: Summary Report
      if: always()
      run: |
        echo "## TruffleHog Scan Summary" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "- **Scan Mode**: ${{ steps.scan-params.outputs.scan_mode }}" >> $GITHUB_STEP_SUMMARY
        echo "- **Repository**: ${{ github.repository }}" >> $GITHUB_STEP_SUMMARY
        echo "- **Branch/PR**: ${{ github.ref_name }}" >> $GITHUB_STEP_SUMMARY
        echo "- **Scan Result**: ${{ steps.trufflehog.outcome }}" >> $GITHUB_STEP_SUMMARY
        echo "- **Secrets Found**: ${{ env.secrets_found }}" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        
        if [[ "${{ env.secrets_found }}" == "true" ]]; then
          echo "### ‚ö†Ô∏è Action Required" >> $GITHUB_STEP_SUMMARY
          echo "Potential secrets were detected. Please review the scan results and:" >> $GITHUB_STEP_SUMMARY
          echo "1. Remove any actual secrets from your code" >> $GITHUB_STEP_SUMMARY
          echo "2. Use secure secret management practices" >> $GITHUB_STEP_SUMMARY
          echo "3. Update exclusion patterns for false positives" >> $GITHUB_STEP_SUMMARY
        else
          echo "### ‚úÖ All Clear" >> $GITHUB_STEP_SUMMARY
          echo "No secrets detected in this scan." >> $GITHUB_STEP_SUMMARY
        fi

    - name: Fail on Secrets (Production Protection)
      if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
      run: |
        if [[ "${{ env.secrets_found }}" == "true" ]]; then
          echo "‚ùå Failing workflow: Secrets detected in production branch"
          exit 1
        else
          echo "‚úÖ Production branch is secure"
        fi