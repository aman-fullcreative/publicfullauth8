name: TruffleHog Secret Scanning
on:
  push:
    branches: [ main, master, develop ]
  pull_request:
    branches: [ main, master, develop ]
  schedule:
    # Weekly full scan every Sunday at 2 AM UTC
    - cron: '0 2 * * 0'
  workflow_dispatch:
    inputs:
      scan_type:
        description: 'Type of scan to run'
        required: true
        default: 'incremental'
        type: choice
        options:
          - 'incremental'
          - 'full'

jobs:
  trufflehog:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      security-events: write
      pull-requests: write
    timeout-minutes: 60
    
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0 # Full history for comprehensive scanning
        
    - name: Determine Scan Parameters
      id: scan-params
      run: |
        if [[ "${{ github.event_name }}" == "pull_request" ]]; then
          echo "scan_mode=incremental" >> $GITHUB_OUTPUT
          echo "since_commit=${{ github.event.pull_request.base.sha }}" >> $GITHUB_OUTPUT
          echo "branch=${{ github.event.pull_request.head.ref }}" >> $GITHUB_OUTPUT
        elif [[ "${{ github.event_name }}" == "push" ]]; then
          echo "scan_mode=incremental" >> $GITHUB_OUTPUT
          echo "since_commit=${{ github.event.before }}" >> $GITHUB_OUTPUT
          echo "branch=${{ github.ref_name }}" >> $GITHUB_OUTPUT
        elif [[ "${{ github.event_name }}" == "schedule" ]]; then
          echo "scan_mode=full" >> $GITHUB_OUTPUT
          echo "since_commit=" >> $GITHUB_OUTPUT
          echo "branch=${{ github.ref_name }}" >> $GITHUB_OUTPUT
        elif [[ "${{ github.event_name }}" == "workflow_dispatch" ]]; then
          if [[ "${{ github.event.inputs.scan_type }}" == "full" ]]; then
            echo "scan_mode=full" >> $GITHUB_OUTPUT
            echo "since_commit=" >> $GITHUB_OUTPUT
          else
            echo "scan_mode=incremental" >> $GITHUB_OUTPUT
            echo "since_commit=${{ github.event.before }}" >> $GITHUB_OUTPUT
          fi
          echo "branch=${{ github.ref_name }}" >> $GITHUB_OUTPUT
        fi
        
    - name: Run TruffleHog Scan
      uses: trufflesecurity/trufflehog@v3.82.13
      with:
        base: ${{ steps.scan-params.outputs.since_commit }}
        head: ${{ steps.scan-params.outputs.branch }}
        path: ./
        extra_args: >-
          --config=.trufflehog.yml 
          --exclude-paths=.trufflehog-exclude-paths.txt 
          --json
          --archive-max-size=104857600 
          --archive-max-depth=10 
          --archive-timeout=300s 
          --concurrency=4 
          --filter-unverified 
          --filter-entropy=3.0 
          --no-update 
          --max-depth=20
          --results=verified,unknown
          --fail
          
    - name: Upload TruffleHog Results
      if: failure()
      uses: actions/upload-artifact@v4
      with:
        name: trufflehog-results-${{ github.run_id }}
        path: |
          trufflehog-results.json
        retention-days: 30
        
    - name: Comment on PR
      if: failure() && github.event_name == 'pull_request'
      uses: actions/github-script@v7
      with:
        script: |
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: '🚨 **TruffleHog Secret Scan Failed** 🚨\n\nPotential secrets were detected in this pull request. Please review the scan results in the Actions tab and remediate any exposed credentials before merging.\n\n**Next Steps:**\n1. Check the workflow logs for detailed findings\n2. Remove or rotate any exposed secrets\n3. Update `.trufflehog-exclude-paths.txt` if there are false positives\n4. Re-run the workflow after fixes\n\n⚠️ **Important:** Never commit real secrets to version control, even temporarily.'
          })
          
    - name: Create Security Advisory
      if: failure() && (github.event_name == 'schedule' || github.event.inputs.scan_type == 'full')
      uses: actions/github-script@v7
      with:
        script: |
          try {
            await github.rest.securityAdvisories.createRepositoryAdvisory({
              owner: context.repo.owner,
              repo: context.repo.repo,
              summary: 'Potential secrets detected by TruffleHog scan',
              description: 'TruffleHog detected potential secrets in the repository during a scheduled scan. Please review the workflow logs and remediate any exposed credentials.',
              severity: 'high',
              vulnerabilities: [{
                package: {
                  ecosystem: 'other',
                  name: context.repo.repo
                },
                vulnerable_version_range: '*',
                patched_versions: 'none',
                vulnerable_functions: []
              }]
            });
          } catch (error) {
            console.log('Could not create security advisory:', error.message);
            // Fallback to issue creation
            await github.rest.issues.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: '🚨 Secrets Detected by TruffleHog Scan',
              body: '**Scheduled TruffleHog scan detected potential secrets**\n\n' +
                    'A scheduled security scan has identified potential secrets in the repository. ' +
                    'Please review the workflow logs and take immediate action to:\n\n' +
                    '1. Identify the exposed secrets\n' +
                    '2. Rotate/revoke the compromised credentials\n' +
                    '3. Remove secrets from version control history if necessary\n' +
                    '4. Implement proper secret management practices\n\n' +
                    '**Scan Details:**\n' +
                    `- Workflow Run: ${context.runId}\n` +
                    `- Branch: ${context.ref}\n` +
                    `- Commit: ${context.sha}\n\n` +
                    '⚠️ **This is a security-critical issue that requires immediate attention.**',
              labels: ['security', 'urgent', 'secrets']
            });
          }
          
    - name: Generate Scan Report
      if: always()
      run: |
        echo "# TruffleHog Scan Report" >> scan_report.md
        echo "" >> scan_report.md
        echo "**Scan Details:**" >> scan_report.md
        echo "- Repository: ${{ github.repository }}" >> scan_report.md
        echo "- Branch: ${{ steps.scan-params.outputs.branch }}" >> scan_report.md
        echo "- Scan Mode: ${{ steps.scan-params.outputs.scan_mode }}" >> scan_report.md
        echo "- Trigger: ${{ github.event_name }}" >> scan_report.md
        echo "- Workflow Run: ${{ github.run_id }}" >> scan_report.md
        echo "- Timestamp: $(date -u)" >> scan_report.md
        echo "" >> scan_report.md
        if [[ "${{ job.status }}" == "failure" ]]; then
          echo "**Result: ❌ SECRETS DETECTED**" >> scan_report.md
          echo "" >> scan_report.md
          echo "Potential secrets were found. Review the workflow logs for details." >> scan_report.md
        else
          echo "**Result: ✅ NO SECRETS DETECTED**" >> scan_report.md
          echo "" >> scan_report.md
          echo "No secrets were detected in this scan." >> scan_report.md
        fi
        
    - name: Upload Scan Report
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: trufflehog-scan-report-${{ github.run_id }}
        path: scan_report.md
        retention-days: 30